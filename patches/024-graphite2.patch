--- graphite2-1.3.8/src/inc/json.h.orig	2016-04-01 03:31:38.543833400 -0400
+++ graphite2-1.3.8/src/inc/json.h	2016-04-01 03:38:38.112543400 -0400
@@ -86,6 +86,10 @@ public:
     json & operator << (number) throw();
     json & operator << (integer) throw();
     json & operator << (long unsigned int d) throw();
+#ifdef _WIN32
+    json & operator << (unsigned __int64 d) throw();
+    json & operator << (__int64 d) throw();
+#endif
     json & operator << (boolean) throw();
     json & operator << (_null_t) throw();
     json & operator << (_context_t) throw();
--- graphite2-1.3.8/src/json.cpp.orig	2016-04-01 03:31:38.550833700 -0400
+++ graphite2-1.3.8/src/json.cpp	2016-04-01 03:41:05.363588200 -0400
@@ -133,6 +133,10 @@ json & json::operator << (json::number f
 }
 json & json::operator << (json::integer d) throw()  { context(seq); fprintf(_stream, "%ld", d); return *this; }
 json & json::operator << (long unsigned d) throw()  { context(seq); fprintf(_stream, "%ld", d); return *this; }
+#ifdef _WIN32
+json & json::operator << (unsigned __int64 d) throw()	{ context(seq); fprintf(_stream, "%I64", d); return *this; }
+json & json::operator << (__int64 d) throw()	{ context(seq); fprintf(_stream, "%I64", d); return *this; }
+#endif
 json & json::operator << (json::boolean b) throw()  { context(seq); fputs(b ? "true" : "false", _stream); return *this; }
 json & json::operator << (json::_null_t) throw()    { context(seq); fputs("null",_stream); return *this; }
 
--- graphite2-1.2.1/graphite2.pc.in	2013-02-27 20:32:04.000000000 +0100
+++ graphite2-1.2.1/graphite2.pc.in	2013-05-09 22:52:58.990959979 +0200
@@ -1,3 +1,7 @@
+prefix=${prefix}
+exec_prefix=${prefix}
+libdir=${prefix}/lib
+includedir=${prefix}/include
 
 Name: Graphite2
 Description: Font rendering engine for Complex Scripts
--- graphite2-1.2.1/CMakeLists.txt	2013-02-27 20:32:04.000000000 +0100
+++ graphite2-1.2.1/CMakeLists.txt	2013-06-06 21:11:28.241391998 +0200
@@ -64,6 +64,7 @@
 endif (NOT (GRAPHITE2_NSEGCACHE OR GRAPHITE2_NFILEFACE))
 
 set(version 3.0.1)
+set(prefix ${CMAKE_INSTALL_PREFIX})
 set(libdir ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX})
 set(includedir ${CMAKE_INSTALL_PREFIX}/include)
 
--- graphite2-1.3.9/src/CMakeLists.txt.orig	2016-11-13 06:34:20.164960700 -0500
+++ graphite2-1.3.9/src/CMakeLists.txt	2016-11-13 07:14:00.877066000 -0500
@@ -106,6 +106,48 @@
                                             LT_VERSION_REVISION ${GRAPHITE_API_REVISION}
                                             LT_VERSION_AGE ${GRAPHITE_API_AGE})
 
+add_library(graphite2_static STATIC
+    ${GRAPHITE2_VM_TYPE}_machine.cpp
+    gr_char_info.cpp
+    gr_features.cpp
+    gr_face.cpp
+    gr_font.cpp
+    gr_logging.cpp
+    gr_segment.cpp
+    gr_slot.cpp
+    CachedFace.cpp
+    CmapCache.cpp
+    Code.cpp
+    Collider.cpp
+    Decompressor.cpp
+    Face.cpp
+    FeatureMap.cpp
+    Font.cpp
+    GlyphFace.cpp
+    GlyphCache.cpp
+    Intervals.cpp
+    Justifier.cpp
+    NameTable.cpp
+    Pass.cpp
+    Position.cpp
+    Segment.cpp
+    Silf.cpp
+    Slot.cpp
+    Sparse.cpp
+    TtfUtil.cpp
+    UtfCodec.cpp
+    ${FILEFACE}
+    ${SEGCACHE}
+    ${TRACING})
+
+set_target_properties(graphite2_static PROPERTIES PUBLIC_HEADER "${GRAPHITE_HEADERS}"
+                                                  SOVERSION ${GRAPHITE_SO_VERSION}
+                                                  VERSION ${GRAPHITE_VERSION}
+                                                  LT_VERSION_CURRENT ${GRAPHITE_API_CURRENT}
+                                                  LT_VERSION_REVISION ${GRAPHITE_API_REVISION}
+                                                  LT_VERSION_AGE ${GRAPHITE_API_AGE} 
+                                                  OUTPUT_NAME graphite2)
+
 if  (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
     set_target_properties(graphite2 PROPERTIES 
         COMPILE_FLAGS   "-Wall -Wextra -Wno-unknown-pragmas -Wendif-labels -Wshadow -Wctor-dtor-privacy -Wnon-virtual-dtor -fno-rtti -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -fno-stack-protector"
@@ -148,8 +190,21 @@
 if  (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
     set_target_properties(graphite2 PROPERTIES 
         COMPILE_DEFINITIONS "_SCL_SECURE_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;UNICODE;GRAPHITE2_EXPORTING")
+    set_target_properties(graphite2_static PROPERTIES 
+        COMPILE_DEFINITIONS "_SCL_SECURE_NO_WARNINGS;_CRT_SECURE_NO_WARNINGS;UNICODE;GRAPHITE2_STATIC")
+
+    if(MINGW)
+        if (GRAPHITE2_ASAN)
+            target_link_libraries(graphite2 PRIVATE gcc_s)
+            target_link_libraries(graphite2_static PRIVATE gcc_s)
+        else (GRAPHITE2_ASAN)
+            target_link_libraries(graphite2 PRIVATE gcc)
+            target_link_libraries(graphite2_static PRIVATE gcc)
+        endif (GRAPHITE2_ASAN)
+    endif(MINGW)
+
 endif (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
 
 
-install(TARGETS graphite2 EXPORT graphite2 LIBRARY DESTINATION lib${LIB_SUFFIX} ARCHIVE DESTINATION lib${LIB_SUFFIX} PUBLIC_HEADER DESTINATION include/graphite2 RUNTIME DESTINATION bin)
+install(TARGETS graphite2 graphite2_static EXPORT graphite2 LIBRARY DESTINATION lib${LIB_SUFFIX} ARCHIVE DESTINATION lib${LIB_SUFFIX} PUBLIC_HEADER DESTINATION include/graphite2 RUNTIME DESTINATION bin)
 install(EXPORT graphite2 DESTINATION share/graphite2 NAMESPACE gr2_)
--- graphite2-1.3.8/include/graphite2/Types.h.orig	2016-09-16 23:16:38.006355900 -0400
+++ graphite2-1.3.8/include/graphite2/Types.h	2016-09-16 23:18:12.217540500 -0400
@@ -40,6 +40,31 @@
   gr_utf8 = 1/*sizeof(uint8)*/, gr_utf16 = 2/*sizeof(uint16)*/, gr_utf32 = 4/*sizeof(uint32)*/
 };
 
+#if defined(__GNUC__)  || defined(__clang__)
+#define GR_MAYBE_UNUSED __attribute__((unused))
+#else
+#define GR_MAYBE_UNUSED
+#endif
+
+#if defined(__clang__) && __cplusplus >= 201103L
+   /* clang's fallthrough annotations are only available starting in C++11. */
+    #define GR_FALLTHROUGH [[clang::fallthrough]]
+#elif defined(_MSC_VER)
+   /*
+    * MSVC's __fallthrough annotations are checked by /analyze (Code Analysis):
+    * https://msdn.microsoft.com/en-us/library/ms235402%28VS.80%29.aspx
+    */
+    #include <sal.h>
+    #define GR_FALLTHROUGH __fallthrough
+#else
+    #define GR_FALLTHROUGH /* fallthrough */
+#endif
+
+#ifdef _MSC_VER
+#pragma warning(disable: 4800)
+#pragma warning(disable: 4355)
+#endif
+
 // Definitions for library publicly exported symbols
 #if defined _WIN32 || defined __CYGWIN__
   #if defined GRAPHITE2_STATIC
--- graphite2-1.3.8/src/inc/Main.h.orig	2016-09-16 23:15:44.029355200 -0400
+++ graphite2-1.3.8/src/inc/Main.h	2016-09-16 23:18:14.601872400 -0400
@@ -120,27 +120,3 @@
     void operator delete[] (void * p)throw() { free(p); } \
     void operator delete[] (void *, void *) throw() {}
 
-#if defined(__GNUC__)  || defined(__clang__)
-#define GR_MAYBE_UNUSED __attribute__((unused))
-#else
-#define GR_MAYBE_UNUSED
-#endif
-
-#if defined(__clang__) && __cplusplus >= 201103L
-   /* clang's fallthrough annotations are only available starting in C++11. */
-    #define GR_FALLTHROUGH [[clang::fallthrough]]
-#elif defined(_MSC_VER)
-   /*
-    * MSVC's __fallthrough annotations are checked by /analyze (Code Analysis):
-    * https://msdn.microsoft.com/en-us/library/ms235402%28VS.80%29.aspx
-    */
-    #include <sal.h>
-    #define GR_FALLTHROUGH __fallthrough
-#else
-    #define GR_FALLTHROUGH /* fallthrough */
-#endif
-
-#ifdef _MSC_VER
-#pragma warning(disable: 4800)
-#pragma warning(disable: 4355)
-#endif
--- graphite2-1.3.8/include/graphite2/Log.h.orig	2016-09-16 23:28:23.462998100 -0400
+++ graphite2-1.3.8/include/graphite2/Log.h	2016-09-16 23:31:58.675576600 -0400
@@ -56,7 +56,7 @@
   * @param face     the gr_face whose segments you want to log to the given file
   * @param log_path a utf8 encoded file name and path to log to.
   */
-GR2_API bool gr_start_logging(gr_face * face, const char *log_path);
+GR2_API bool gr_start_logging(GR_MAYBE_UNUSED  gr_face * face, const char *log_path);
 
 
 /** Stop logging on the given face.  This will close the log file created by
@@ -64,7 +64,7 @@
   *
   * @param face the gr_face whose segments you want to stop logging
   */
-GR2_API void gr_stop_logging(gr_face * face);
+GR2_API void gr_stop_logging(GR_MAYBE_UNUSED gr_face * face);
 
 /** Start logging to a FILE object.
   * This function is deprecated as of 1.2.0, use the _face versions instead.
--- graphite2-1.3.10/include/graphite2/Types.h	2017-07-05 14:53:31.228742100 +0800
+++ graphite2-1.3.10/include/graphite2/Types.h.orig	2017-07-05 14:52:59.534576700 +0800
@@ -66,7 +66,7 @@
 #endif
 
 // Definitions for library publicly exported symbols
-#if defined _WIN32 || defined __CYGWIN__
+#if defined(_MSC_VER)
   #if defined GRAPHITE2_STATIC
     #define GR2_API
   #elif defined GRAPHITE2_EXPORTING
